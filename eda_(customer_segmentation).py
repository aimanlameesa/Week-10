# -*- coding: utf-8 -*-
"""eda (customer_segmentation).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18MPYHZkylEVF1DI5T8pxDhQUH_FJh5wJ
"""

import numpy as np
import pandas as pd
import seaborn as sns 
import matplotlib.pyplot as plt

data = pd.read_csv('/content/cust_seg.csv')

data.head()

data.tail()

data = data.drop ('Unnamed: 0', axis=1)

data.shape

data.describe()

data.columns

data.dtypes

data.nunique()

"""Checking Null Values"""

data.isnull().sum()

"""Replacing Null Values with Median based Approach"""

data.fillna(data.mean(), inplace = True)

data.isnull().sum()

"""Handling Null Values for Categorical Columns"""

data.fillna(data.select_dtypes(include='object').mode().iloc[0], inplace=True)

data.isnull().sum()

"""Filling with Unknown Class"""

data['conyuemp'] = data['conyuemp'].fillna("Unknown")

data.isnull().sum()

"""Detecting and Removing Outliers using the Inter Quantile Range(IQR)"""

Q1 = data.quantile(0.25)
Q3 = data.quantile(0.75)
IQR = Q3 - Q1
print(IQR)

for x in ['cod_prov']:
    q75,q25 = np.percentile(data.loc[:,x],[75,25])
    intr_qr = q75-q25
 
    max = q75+(1.5*intr_qr)
    min = q25-(1.5*intr_qr)
 
    data.loc[data[x] < min,x] = np.nan
    data.loc[data[x] > max,x] = np.nan

for x in ['renta']:
    q75,q25 = np.percentile(data.loc[:,x],[75,25])
    intr_qr = q75-q25
 
    max = q75+(1.5*intr_qr)
    min = q25-(1.5*intr_qr)
 
    data.loc[data[x] < min,x] = np.nan
    data.loc[data[x] > max,x] = np.nan

for x in ['ind_actividad_cliente']:
    q75,q25 = np.percentile(data.loc[:,x],[75,25])
    intr_qr = q75-q25
 
    max = q75+(1.5*intr_qr)
    min = q25-(1.5*intr_qr)
 
    data.loc[data[x] < min,x] = np.nan
    data.loc[data[x] > max,x] = np.nan

data = data.dropna(axis = 0)

data

"""After Removing Outliers"""

data.shape

"""Exploratory Data Analysis"""

f,ax=plt.subplots(1,2,figsize=(18,8))
data['sexo'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True)
ax[0].set_title('sexo')
ax[0].set_ylabel('')
sns.countplot('sexo',data=data,ax=ax[1])
ax[1].set_title('sexo')
plt.show()

plt.figure(figsize = (8,8))
sns.countplot(x ='ind_actividad_cliente', data = data)

plt.figure(figsize = (8,8))
sns.countplot(x ='indresi', data = data)

plt.figure(figsize = (8,8))
sns.countplot(x = 'indresi', hue='sexo', data=data, palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x ='indext', data = data)

plt.figure(figsize = (8,8))
sns.countplot(x = 'indext', hue='sexo', data=data, palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x ='ind_empleado', data = data)
 
plt.show()

plt.figure(figsize = (8,8))
sns.countplot(x = 'ind_empleado', hue='indresi', data=data, palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x = 'ind_empleado', hue='indext', data=data, palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x ='tiprel_1mes', data = data)
 
plt.show()

plt.figure(figsize = (8,8))
sns.countplot(x = 'tiprel_1mes', hue='indext', data=data, palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x = 'tiprel_1mes', hue='indresi', data=data, palette='coolwarm')

import plotly.express as px

fig = px.pie(data, values='renta', names='sexo')
fig.show()

import plotly.express as px

fig = px.pie(data, values='renta', names='pais_residencia')
fig.show()

import plotly.express as px

fig = px.pie(data, values='renta', names='nomprov')
fig.show()

plt.figure(figsize = (8,8))
sns.countplot(x='ind_cco_fin_ult1',hue='ind_actividad_cliente',data=data,palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x='ind_cder_fin_ult1',hue='ind_actividad_cliente',data=data,palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x='ind_cno_fin_ult1',hue='ind_actividad_cliente',data=data,palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x='ind_ctju_fin_ult1',hue='ind_actividad_cliente',data=data,palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x='ind_deco_fin_ult1',hue='ind_actividad_cliente',data=data,palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x='ind_deme_fin_ult1',hue='ind_actividad_cliente',data=data,palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x='ind_dela_fin_ult1',hue='ind_actividad_cliente',data=data,palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x='ind_ecue_fin_ult1',hue='ind_actividad_cliente',data=data,palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x='ind_plan_fin_ult1',hue='ind_actividad_cliente',data=data,palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x='ind_pres_fin_ult1',hue='ind_actividad_cliente',data=data,palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x='ind_reca_fin_ult1',hue='ind_actividad_cliente',data=data,palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x='ind_tjcr_fin_ult1',hue='ind_actividad_cliente',data=data,palette='coolwarm')

plt.figure(figsize = (8,8))
sns.countplot(x='ind_recibo_ult1',hue='ind_actividad_cliente',data=data,palette='coolwarm')